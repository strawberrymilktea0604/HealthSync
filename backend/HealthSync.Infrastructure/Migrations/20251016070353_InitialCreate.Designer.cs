// <auto-generated />
using System;
using HealthSync.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthSync.Infrastructure.Migrations
{
    [DbContext(typeof(HealthSyncDbContext))]
    [Migration("20251016070353_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthSync.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExerciseId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.ExerciseSession", b =>
                {
                    b.Property<int>("ExerciseSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseSessionId"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("RestSec")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rpe")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightKg")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("WorkoutLogId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseSessionId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutLogId");

                    b.ToTable("ExerciseSessions");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.FoodEntry", b =>
                {
                    b.Property<int>("FoodEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodEntryId"));

                    b.Property<decimal?>("CaloriesKcal")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("CarbsG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("FatG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NutritionLogId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProteinG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("FoodEntryId");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("NutritionLogId");

                    b.ToTable("FoodEntries");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodItemId"));

                    b.Property<decimal>("CaloriesKcal")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("CarbsG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("FatG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ProteinG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("ServingSize")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ServingUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodItemId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TargetValue")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GoalId");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.NutritionLog", b =>
                {
                    b.Property<int>("NutritionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionLogId"));

                    b.Property<decimal>("CarbsG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("FatG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProteinG")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("TotalCalories")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NutritionLogId");

                    b.HasIndex("UserId");

                    b.ToTable("NutritionLogs");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.ProgressRecord", b =>
                {
                    b.Property<int>("ProgressRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressRecordId"));

                    b.Property<int>("GoalId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("WaistCm")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("WeightKg")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ProgressRecordId");

                    b.HasIndex("GoalId");

                    b.ToTable("ProgressRecords");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HeightCm")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("WeightKg")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.WorkoutLog", b =>
                {
                    b.Property<int>("WorkoutLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutLogId"));

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkoutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkoutLogId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.ExerciseSession", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseSessions")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthSync.Domain.Entities.WorkoutLog", "WorkoutLog")
                        .WithMany("ExerciseSessions")
                        .HasForeignKey("WorkoutLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.FoodEntry", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.FoodItem", "FoodItem")
                        .WithMany("FoodEntries")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthSync.Domain.Entities.NutritionLog", "NutritionLog")
                        .WithMany("FoodEntries")
                        .HasForeignKey("NutritionLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("NutritionLog");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.Goal", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.NutritionLog", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.ApplicationUser", "User")
                        .WithMany("NutritionLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.ProgressRecord", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.Goal", "Goal")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.UserProfile", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.ApplicationUser", "User")
                        .WithOne("Profile")
                        .HasForeignKey("HealthSync.Domain.Entities.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.WorkoutLog", b =>
                {
                    b.HasOne("HealthSync.Domain.Entities.ApplicationUser", "User")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("NutritionLogs");

                    b.Navigation("Profile");

                    b.Navigation("WorkoutLogs");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseSessions");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.FoodItem", b =>
                {
                    b.Navigation("FoodEntries");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.Goal", b =>
                {
                    b.Navigation("ProgressRecords");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.NutritionLog", b =>
                {
                    b.Navigation("FoodEntries");
                });

            modelBuilder.Entity("HealthSync.Domain.Entities.WorkoutLog", b =>
                {
                    b.Navigation("ExerciseSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
